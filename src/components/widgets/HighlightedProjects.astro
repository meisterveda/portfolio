---
import { Icon } from 'astro-icon'

const myHeaders = new Headers()
myHeaders.append('Content-Type', 'application/json')
myHeaders.append('Authorization', import.meta.env.GIT_AUTH_KEY)

var graphql = JSON.stringify({
    query: 'query {\r\n  organization(login: "vedacomputing") {\r\n    repositories(\r\n      affiliations: OWNER\r\n      orderBy: {field: UPDATED_AT, direction: DESC}\r\n      isFork: false\r\n      isLocked: false\r\n      first: 2\r\n    ) {\r\n      edges {\r\n        node {\r\n          description\r\n          name\r\n          url\r\n          repositoryTopics(first: 1) {\r\n            edges {\r\n              node {\r\n                topic {\r\n                  name\r\n                }\r\n              }\r\n            }\r\n          }\r\n          homepageUrl\r\n        }\r\n      }\r\n    }\r\n  }\r\n  repositoryOwner(login: "meisterveda") {\r\n    repositories(\r\n      affiliations: OWNER\r\n      isFork: false\r\n      isLocked: false\r\n      first: 3\r\n      orderBy: {field: UPDATED_AT, direction: DESC}\r\n    ) {\r\n      edges {\r\n        node {\r\n          description\r\n          name\r\n          url\r\n          repositoryTopics(first: 1) {\r\n            edges {\r\n              node {\r\n                topic {\r\n                  name\r\n                }\r\n              }\r\n            }\r\n          }\r\n          homepageUrl\r\n        }\r\n      }\r\n    }\r\n  }\r\n}',
    variables: {},
})

const response = await fetch('https://api.github.com/graphql', {
    method: 'POST',
    headers: myHeaders,
    body: graphql,
})
const rep = await response.json()
const organizationRepos = rep.data.organization.repositories.edges
const personalRepos = rep.data.repositoryOwner.repositories.edges
const projects = organizationRepos.concat(personalRepos)
// const projectTopics = projects.node.repositoryTopics.edges
---

<section class="px-4 py-16 mx-auto max-w-6xl lg:py-20">
    <div class="flex flex-col mb-6 lg:justify-between lg:flex-row md:mb-8">
        <p class="text-gray-700 dark:text-slate-400 lg:text-sm lg:max-w-md">
            The blog will be used to display AstroWind documentation. Each new
            article will be an important step that you will need to know to be
            an expert in creating a website using Astro + Tailwind CSS The blog
            does not exist yet, but very soon. Astro is a very interesting
            technology. Thanks.
        </p>
        <h2
            class="max-w-lg mb-2 font-sans text-3xl font-bold tracking-tight sm:text-4xl sm:leading-none lg:mb-5 group"
        >
            <span class="inline-block mb-1 sm:mb-4"
                >Find out more content<br class="hidden md:block" /> in our Blog
            </span>
        </h2>
    </div>

    <div class="grid gap-6 row-gap-5 md:grid-cols-2 lg:grid-cols-4 -mb-6">
        {
            projects.map((project) => (
                <div class="relative flex flex-col p-6 bg-white dark:bg-slate-900 rounded shadow-xl hover:shadow-lg transition dark:border dark:border-slate-800">
                    <div class="flex items-center mb-4">
                        <Icon
                            pack="logos"
                            name={project.node.repositoryTopics.edges.map(
                                (icon) => icon.node.topic.name
                            )}
                            class="w-12 h-12"
                        />
                        <div class="ml-4 text-xl font-bold">
                            {project.node.name}
                        </div>
                    </div>
                    <p class="text-gray-500 dark:text-gray-400 text-md">
                        {project.node.description}
                    </p>
                    <div class="flex items-center justify-end p-2 mb-4">
                        <a href={project.node.homepageUrl}>
                            <Icon name="iconoir:www" class="w-7 h-7" />
                        </a>
                        <a
                            class="text-blue-600 hover:underline dark:text-gray-200"
                            href={project.node.url}
                        >
                            <Icon
                                name="iconoir:github-outline"
                                class="w-7 h-7"
                            />
                        </a>
                    </div>
                </div>
            ))
        }
    </div>
</section>
